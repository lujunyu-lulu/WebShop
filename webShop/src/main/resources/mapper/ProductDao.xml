<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zl.webshop.dao.ProductDao">
	<!-- 目的：为dao接口方法提供sql语句配置 -->
	<select id="count" resultType="java.lang.Integer">
		<!-- 具体的sql -->
		SELECT
		COUNT(*)
		FROM
		product
	</select>
	<select id="fuzzyCount" resultType="java.lang.Integer">
		<!-- 具体的sql -->
		SELECT
		COUNT(*)
		FROM
		product a inner join product_category b on
		a.category_id = b.id

		<if test="searchText != null">
			WHERE
			a.product_name LIKE CONCAT('%',#{searchText},'%') OR b.category_name
			LIKE CONCAT('%',#{searchText},'%')
		</if>
	</select>
	<select id="randomByCategoryId" resultType="Product">
		<!-- 具体的sql -->
		SELECT
		*
		FROM
		product
		WHERE
		`category_id` = #{categoryId}
		ORDER BY
		RAND()
		LIMIT
		#{limit}
	</select>
	<select id="fuzzyQueryAllByText" resultType="Product">
		<!-- 具体的sql -->
		SELECT
		a.id,a.product_name,a.explain,a.category_id,
		a.shop_price,a.price,a.quantity,a.image,a.create_time,a.update_time,
		a.create_user_name,a.update_user_name
		FROM
		product a inner join product_category b on a.category_id = b.id

		<if test="searchText != null">
			WHERE
			a.product_name LIKE CONCAT('%',#{searchText},'%') OR b.category_name
			LIKE CONCAT('%',#{searchText},'%')
		</if>
		ORDER BY
		`id`
		LIMIT
		#{offset}, #{limit}
	</select>
	<select id="queryAll" resultType="Product">
		SELECT
		*
		FROM
		product
		ORDER BY
		`id`
		LIMIT #{offset}, #{limit}
	</select>
	<select id="randomAll" resultType="Product">
		SELECT
		*
		FROM
		product
		ORDER BY
		RAND()
		LIMIT #{limit}
	</select>
	<select id="queryById" resultType="Product">
		SELECT
		*
		FROM
		product
		WHERE
		`id` =
		#{id}
	</select>
	<select id="queryByCategoryId" resultType="Product">
		SELECT
		*
		FROM
		product
		WHERE
		`category_id` = #{categoryId}
		ORDER BY
		`id`
		LIMIT #{offset},
		#{limit}
	</select>
	<select id="queryByProductName" resultType="Product">
		SELECT
		*
		FROM
		product
		WHERE
		`product_name` = #{productName}
	</select>
	<insert id="addProduct">
		INSERT ignore INTO
		`product`
		(`product_name`,`explain`,`category_id`,`shop_price`,`price`,`quantity`,`image`,`create_user_name`,`update_user_name`)
		VALUES
		(#{product.productName},#{product.explain},
		#{product.categoryId},#{product.shopPrice},
		#{product.price},#{product.quantity},
		#{product.image},#{product.createUserName},#{product.updateUserName});
	</insert>
	<delete id="deleteProduct">
		DELETE
		FROM
		`product`
		WHERE
		(`id` = #{product.id});
	</delete>

	<update id="updateProduct">
		UPDATE product
		<set>
			<if test="product.productName != null">
				`product_name` = #{product.productName},
			</if>
			<if test="product.explain != null">
				`explain` = #{product.explain},
			</if>
			<if test="product.categoryId != null and product.categoryId gte 0">
				`category_id` = #{product.categoryId},
			</if>
			<if test="product.shopPrice != null and product.shopPrice gte 0">
				`shop_price` = #{product.shopPrice},
			</if>
			<if test="product.price != null and product.price gte 0">
				`price` = #{product.price},
			</if>
			<if test="product.quantity != null and product.quantity gte 0">
				`quantity` = #{product.quantity},
			</if>
			<if test="product.image != null">
				`image` = #{product.image},
			</if>
			<if test="product.createUserName != null">
				`create_user_name` = #{product.createUserName},
			</if>
			<if test="product.updateUserName != null">
				`update_user_name` = #{product.updateUserName}
			</if>
		</set>
		WHERE
		`id` = #{product.id}
	</update>
</mapper>